---- Preparations

01. Install Oracle VM VirtualBox https://www.virtualbox.org
02. Install Vagrant https://www.vagrantup.com
03. Download PuTTY from https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html
03. Using cmd.exe, go to the directory you want to use for projects, eg. E:\web\
04. Run the command: vagrant init ubuntu/trusty32
05. When it is completed, modify the file E:\web\Vagrantfile to your liking. Mostly the port forwarding
06. Back in cmd.exe directory E:\web\ run the command: vagrant up
07. It will run for a while, 2-3 minutes
08. Then ssh to 127.0.0.1 in port 2222, using PuTTY
09. username: vagrant, password: vagrant
10. Inside the ssh session, run: cd /vagrant
11. The contents of that directory are the same that you have in E:\web\
12. Normally you should only edit the files in Windows, so that the data stays intact

---- Setting up the environment

13. At stock settings, the platform is quite empty, so install these:
14. Git:            sudo apt-get install git
15. Apache:         sudo apt-get install apache2
16. PHP:            sudo apt-get install php5
17. MariaDB:        sudo apt-get install mariadb-server
18. MySQL-plugin:   sudo apt-get install php5-mysql
19. During the above, you will see warnings from Apache about ServerName. Fix it like this:
20. Give the command: echo "ServerName localhost" | sudo tee /etc/apache2/conf-available/servername.conf
21. Then activate it: sudo a2enconf servername
22. And restart Apache for it to take effect: sudo service apache2 reload

---- Configuring things

23. Add the project directory to Apache config: sudo vim /etc/apache2/apache2.conf
24. Scroll down the file, until you see some <Directory> things:
25. Add a new one below them, using the below example, and save the file:

    <Directory /vagrant/vortech-api/>
        Options Indexes FollowSymLinks MultiViews
        AllowOverride All
        Order allow,deny
        allow from all
        Require all granted
    </Directory>

26. Then add the site to Apache: cd /etc/apache2/sites-available
27. Create your own config there: sudo cp 000-default.conf vortech-api.conf
28. Edit the file: sudo vim vortech-api.conf
29. On the very first row, there is: <VirtualHost *:80>
30. Change the 80 to 5656, which will be the port we use to access the site (http://localhost:5656)
31. Then a bit lower down in the same file, there is: DocumentRoot /var/www/html
32. Replace it with: DocumentRoot /vagrant/vortech-api
33. Save the file and then activate the config: sudo a2ensite vortech-api.conf
34. You can also enable Rewrites (pretty urls, eg. http://localhost/api/1.0/) with: sudo a2enmod rewrite
35. Also, add the custom port from step 30 to the ports Apache listens to: sudo vim /etc/apache2/ports.conf
36. It already contains "Listen 80". Add a new entry below it: "Listen 5656", and save the file
37. Finally, restart Apache: sudo service apache2 reload

---- Start the project

38. Inside Vagrant: cd /vagrant/
39. And then give the command: git clone https://github.com/Torniojaws/vortech-api.git
40. When it is done, you should have the directory: /vagrant/vortech-api/
41. In Windows, use a browser to go to: http://localhost:5656/api/1.0/
42. You should see the API documentation. If so, all is ready!

---- Connecting to the Vagrant database from Windows

43. In Vagrant, edit the MySQL config: sudo vim /etc/mysql/my.cnf
44. Comment out (#) these two rows:
    # skip-external-locking
    # bind-address
45. Save and restart MySQL: sudo service mysql restart
46. Then in your SQL-client (eg. HeidiSQL), add a new session of type: MySQL (SSH tunnel)
47. In the regular settings, use the address: 127.0.0.1 in port 3306
48. Username and Password for it is the one you configured in the project file: setup/create_db.sql
49. In the SSH tunnel tab, point to plink.exe, use 127.0.0.1 as the host, and the port is 2222
50. Username and Password should be: "vagrant"
51. Local port is also 3306
52. Now it should work!
